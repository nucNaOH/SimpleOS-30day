     1 00000000                                 ; fyt-os
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 00280000                              BOTPAK 		EQU 	0x00280000 	;bootpack加载
     5  = 00100000                              DSKCAC 		EQU 	0x00100000 	;磁盘缓存的位置
     6  = 00008000                              DSKCAC0 	EQU 	0x00008000 	;磁盘缓存的位置（现实模式）
     7 00000000                                 
     8 00000000                                 ;BOOT_INFO
     9  = 00000FF0                              CYLS 	EQU 	0x0ff0 	;设定启动区
    10  = 00000FF1                              LEDS 	EQU 	0x0ff1
    11  = 00000FF2                              VMODE 	EQU 	0x0ff2 	;颜色的位数
    12  = 00000FF4                              SCRNX 	EQU 	0x0ff4 	;分辨率x
    13  = 00000FF6                              SCRNY 	EQU 	0x0ff6 	;分辨率y
    14  = 00000FF8                              VRAM 	EQU 	0x0ff8 	;图像缓冲区开始地址
    15 00000000                                 
    16                                          	ORG	0xc200
    17 0000C200                                 
    18 0000C200                                 ;设定画面模式
    19 0000C200 B0 13                           	MOV	AL,0x13 		;VGA显卡，320*200*8位彩色
    20 0000C202 B4 00                           	MOV AH,0x00
    21 0000C204 CD 10                           	INT	0x10
    22 0000C206                                 
    23 0000C206 C6 06 0FF2 08                   	MOV	BYTE [VMODE],8 	;记录画面模式
    24 0000C20B C7 06 0FF4 0140                 	MOV	WORD [SCRNX],320
    25 0000C211 C7 06 0FF6 00C8                 	MOV	WORD [SCRNY],200
    26 0000C217 66 C7 06 0FF8 000A0000          	MOV	DWORD [VRAM],0x000a0000
    27 0000C220                                 
    28 0000C220                                 ;	MOV	BX,0x4101 		;VBE的640*480*8bi彩色
    29 0000C220                                 ;	MOV	AX,0x4f02
    30 0000C220                                 ;	INT 0x10
    31 0000C220                                 
    32 0000C220                                 ;	MOV	BYTE [VMODE],8 	;记录画面模式
    33 0000C220                                 ;	MOV	WORD [SCRNX],640
    34 0000C220                                 ;	MOV	WORD [SCRNY],480
    35 0000C220                                 ;	MOV	DWORD [VRAM],0xe0000000
    36 0000C220                                 
    37 0000C220                                 ;用BIOS取得键盘上各种LED指示灯的状态
    38 0000C220 B4 02                           	MOV	AH,0x02
    39 0000C222 CD 16                           	INT	0x16 			;Keyboard BIOS
    40 0000C224 A2 0FF1                         	MOV	[LEDS],AL
    41 0000C227                                 
    42 0000C227                                 ;下面的部分回头再讲
    43 0000C227                                 
    44 0000C227                                 
    45 0000C227                                 ; PICが一切の割り込みを受け付けないようにする
    46 0000C227                                 ;	AT互換機の仕様では、PICの初期化をするなら、
    47 0000C227                                 ;	こいつをCLI前にやっておかないと、たまにハングアップする
    48 0000C227                                 ;	PICの初期化はあとでやる
    49 0000C227                                 
    50 0000C227 B0 FF                           		MOV		AL,0xff
    51 0000C229 E6 21                           		OUT		0x21,AL
    52 0000C22B 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
    53 0000C22C E6 A1                           		OUT		0xa1,AL
    54 0000C22E                                 
    55 0000C22E FA                              		CLI						; さらにCPUレベルでも割り込み禁止
    56 0000C22F                                 
    57 0000C22F                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
    58 0000C22F                                 
    59 0000C22F E8 00B5                         		CALL	waitkbdout
    60 0000C232 B0 D1                           		MOV		AL,0xd1
    61 0000C234 E6 64                           		OUT		0x64,AL
    62 0000C236 E8 00AE                         		CALL	waitkbdout
    63 0000C239 B0 DF                           		MOV		AL,0xdf			; enable A20
    64 0000C23B E6 60                           		OUT		0x60,AL
    65 0000C23D E8 00A7                         		CALL	waitkbdout
    66 0000C240                                 
    67 0000C240                                 ; プロテクトモード移行
    68 0000C240                                 
    69 0000C240                                 [INSTRSET "i486p"]				; 486の命令まで使いたいという記述
    70 0000C240                                 
    71 0000C240 0F 01 16 C32A                   		LGDT	[GDTR0]			; 暫定GDTを設定
    72 0000C245 0F 20 C0                        		MOV		EAX,CR0
    73 0000C248 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
    74 0000C24E 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
    75 0000C252 0F 22 C0                        		MOV		CR0,EAX
    76 0000C255 EB 00                           		JMP		pipelineflush
    77 0000C257                                 pipelineflush:
    78 0000C257 B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
    79 0000C25A 8E D8                           		MOV		DS,AX
    80 0000C25C 8E C0                           		MOV		ES,AX
    81 0000C25E 8E E0                           		MOV		FS,AX
    82 0000C260 8E E8                           		MOV		GS,AX
    83 0000C262 8E D0                           		MOV		SS,AX
    84 0000C264                                 
    85 0000C264                                 ; bootpackの転送
    86 0000C264                                 
    87 0000C264 66 BE 0000C330                  		MOV		ESI,bootpack	; 転送元
    88 0000C26A 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
    89 0000C270 66 B9 00020000                  		MOV		ECX,512*1024/4
    90 0000C276 E8 0075                         		CALL	memcpy
    91 0000C279                                 
    92 0000C279                                 ; ついでにディスクデータも本来の位置へ転送
    93 0000C279                                 
    94 0000C279                                 ; まずはブートセクタから
    95 0000C279                                 
    96 0000C279 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
    97 0000C27F 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
    98 0000C285 66 B9 00000080                  		MOV		ECX,512/4
    99 0000C28B E8 0060                         		CALL	memcpy
   100 0000C28E                                 
   101 0000C28E                                 ; 残り全部
   102 0000C28E                                 
   103 0000C28E 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   104 0000C294 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   105 0000C29A 66 B9 00000000                  		MOV		ECX,0
   106 0000C2A0 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   107 0000C2A4 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   108 0000C2AB 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   109 0000C2B2 E8 0039                         		CALL	memcpy
   110 0000C2B5                                 
   111 0000C2B5                                 ; asmheadでしなければいけないことは全部し終わったので、
   112 0000C2B5                                 ;	あとはbootpackに任せる
   113 0000C2B5                                 
   114 0000C2B5                                 ; bootpackの起動
   115 0000C2B5                                 
   116 0000C2B5 66 BB 00280000                  		MOV		EBX,BOTPAK
   117 0000C2BB 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   118 0000C2C0 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   119 0000C2C4 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   120 0000C2C8 74 10                           		JZ		skip			; 転送するべきものがない
   121 0000C2CA 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   122 0000C2CF 66 01 DE                        		ADD		ESI,EBX
   123 0000C2D2 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   124 0000C2D7 E8 0014                         		CALL	memcpy
   125 0000C2DA                                 skip:
   126 0000C2DA 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   127 0000C2DF 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   128 0000C2E7                                 
   129 0000C2E7                                 waitkbdout:
   130 0000C2E7 E4 64                           		IN		 AL,0x64
   131 0000C2E9 24 02                           		AND		 AL,0x02
   132 0000C2EB 75 FA                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   133 0000C2ED C3                              		RET
   134 0000C2EE                                 
   135 0000C2EE                                 memcpy:
   136 0000C2EE 67 66 8B 06                     		MOV		EAX,[ESI]
   137 0000C2F2 66 83 C6 04                     		ADD		ESI,4
   138 0000C2F6 67 66 89 07                     		MOV		[EDI],EAX
   139 0000C2FA 66 83 C7 04                     		ADD		EDI,4
   140 0000C2FE 66 83 E9 01                     		SUB		ECX,1
   141 0000C302 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   142 0000C304 C3                              		RET
   143 0000C305                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   144 0000C305                                 
   145 0000C305 00 00 00 00 00 00 00 00 00 00   		ALIGNB	16
       0000C30F 00 
   146 0000C310                                 GDT0:
   147 0000C310 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   148 0000C318 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   149 0000C320 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   150 0000C328                                 
   151 0000C328 0000                            		DW		0
   152 0000C32A                                 GDTR0:
   153 0000C32A 0017                            		DW		8*3-1
   154 0000C32C 0000C310                        		DD		GDT0
   155 0000C330                                 
   156 0000C330                                 		ALIGNB	16
   157 0000C330                                 bootpack:
